{"version":3,"sources":["BooksAPI.js","Book.js","BookShelf.js","Search.js","MyReads.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","getNewShelf","e","BooksAPI","_this","props","target","value","updateBookList","goBack","getBooksShelf","_this$props","library","undefined","match","filter","b","length","_this$props2","this","shelves","toTitlecase","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","disabled","map","s","key","title","authors","index","Component","BookShelf","booksOnShelves","name","src_Book","Search","state","searched","event","setState","Link","to","type","placeholder","MyReads","showSearchPage","string","charAt","toUpperCase","slice","replace","trim","_this2","_this$state","Route","path","render","_ref","history","src_Search","push","exact","src_BookShelf","BooksApp","src_MyReads","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.109bc458.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\nimport * as BooksAPI from './BooksAPI'\n\nclass Book extends Component {\n  getNewShelf = (e) => {\n    BooksAPI.update(this.props.book, e.target.value).then(() => {\n      this.props.updateBookList()\n    })\n    this.props.goBack && this.props.goBack()\n  }\n  getBooksShelf = () => {\n    const {library, book} = this.props\n    if (book.shelf !== undefined) {\n      return book.shelf\n    } else {\n      const match = library.filter((b) => {\n        return b.id === book.id\n      })\n      return match.length > 0\n        ? match[0].shelf\n        : 'none'\n    }\n  }\n  render() {\n    const {book, shelves, toTitlecase} = this.props\n    return (<li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{\n              width: 128,\n              height: 193,\n              backgroundImage: 'url(\"' + (\n                typeof book.imageLinks != \"undefined\"\n                ? book.imageLinks.thumbnail\n                : '') + '\")'\n            }}></div>\n          <div className=\"book-shelf-changer\">\n            <select onChange={this.getNewShelf} value={this.getBooksShelf()}>\n              <option value=\"move\" disabled=\"disabled\">Move to...</option>\n              {shelves.map((s) => (<option value={s} key={s}>{toTitlecase(s)}</option>))}\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        {book.authors && (book.authors.map((a, index) => <div className=\"book-authors\" key={a}>{a}<br/></div>))}\n      </div>\n    </li>)\n  }\n}\n\nexport default Book\n","import React from 'react'\nimport Book from './Book'\n\nconst BookShelf = (props) => {\n  const {booksOnShelves, name, toTitlecase, shelves, updateBookList} = props\n  return (<div className=\"bookshelf\">\n    <h2 className=\"bookshelf-title\">{toTitlecase(name)}</h2>\n    <div className=\"bookshelf-books\">\n      <ol className=\"books-grid\">\n        {booksOnShelves.map((b, index) => <Book key={b.id} book={b} toTitlecase={toTitlecase} shelves={shelves} updateBookList={updateBookList}/>)}\n      </ol>\n    </div>\n  </div>)\n}\n\nexport default BookShelf\n","import React, {Component} from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\nimport {Link} from 'react-router-dom'\n\nclass Search extends Component {\n  state = {\n    books: [],\n    searched: ''\n  }\n  search = (event) => {\n    const searched = event.target.value\n    if (event.target.value.length < 1) {\n      this.setState({books: []})\n      return\n    }\n    BooksAPI.search(searched).then((books) => {\n      this.setState({books: books, searched: searched})\n    })\n  }\n  render() {\n    const {books} = this.state\n    const {toTitlecase, shelves, updateBookList, library, goBack} = this.props\n    return (<div className=\"search-books\">\n      <div className=\"search-books-bar\">\n\n        <Link to='/'>\n          <button className=\"close-search\">Close</button>\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.search}/>\n\n        </div>\n      </div>\n\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {books.length > 0 && books.map((b, index) => <Book key={b.id} book={b} toTitlecase={toTitlecase} shelves={shelves} updateBookList={updateBookList} library={library} goBack={goBack}/>)}\n          {this.state.searched.length > 0 && <p>No book title contains the word {this.state.searched}</p>}\n        </ol>\n      </div>\n    </div>)\n  }\n}\n\nexport default Search\n","import React, {Component} from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport BookShelf from './BookShelf'\nimport Search from './Search'\nimport {Link, Route} from 'react-router-dom'\n\nclass MyReads extends Component {\n  state = {\n    books: [],\n    shelves: [\n      'wantToRead', 'currentlyReading', 'read'\n    ],\n    showSearchPage: false\n  }\n  componentDidMount() {\n    this.updateBookList()\n  }\n  updateBookList = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState(() => ({books: books}))\n    })\n  }\n  toTitlecase = (string) => string.charAt(0).toUpperCase() + string.slice(1).replace(/([A-Z])/g, ' $1').trim()\n\n  render() {\n    const {shelves, books} = this.state\n    return (<div className=\"app\">\n\n      <Route path='/search' render={({history}) => (<Search toTitlecase={this.toTitlecase} shelves={shelves} updateBookList={this.updateBookList} library={books} goBack={() => {\n            history.push('/')\n          }}/>)}/>\n\n      <Route exact={true} path='/' render={() => (<div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n\n          <div className=\"list-books-content\">\n            <div>\n              {\n                shelves.map((s) => (<BookShelf key={s} name={s} booksOnShelves={this.state.books.filter((b) => {\n                    return (b.shelf === s)\n                  })} toTitlecase={this.toTitlecase} shelves={shelves} updateBookList={this.updateBookList}/>))\n              }\n            </div>\n          </div>\n          <div className=\"open-search\">\n            <Link to='/search'>\n              <button>Add a book</button>\n            </Link>\n          </div>\n        </div>)}/>\n\n    </div>)\n  }\n}\n\nexport default MyReads\n","import React from 'react'\nimport MyReads from './MyReads'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n\n  render() {\n    return (<MyReads/>)\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}